import { annann, nnanna, nnannaSyllabary } from ".";
import { describe, expect, it } from "vitest";

describe("ンナッﾝﾅｯ！", () => {
  it("table", () => {
    expect(new Set(nnannaSyllabary).size).toMatchInlineSnapshot(`256`);
  });

  it("nnanna", () => {
    const examples = ["hi", "你好", "hello world", "こんにちは", "ありがとう"];
    expect(examples.map(nnanna)).toMatchInlineSnapshot(
      `
      [
        "ンンンナﾝﾅﾅ!ンンナﾝﾅﾅ",
        "ンンンナナﾝﾂンンﾅﾂンンンナナナﾝﾅ!ンンナナﾝﾂンンナナﾝﾅﾂンンﾅ",
        "ンンンナﾝﾅﾅ!ンンナナﾝﾅﾅ!ンンンﾝﾅﾅ!ンンンﾝﾅﾅ!ﾝﾅﾅ!ンンンナナナﾝﾅﾅﾅ!ナナﾅﾅ!ﾝﾅﾅ!ンナナナﾅﾅ!ンンンﾝﾅﾅ!ンンンナナﾝﾅﾅ",
        "ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂナナナﾝﾝﾅ!ナナナﾝﾂンナナナﾝﾝﾝﾅﾂナナナﾝﾝﾅ!ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂナﾝﾅ!ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂンンナナナﾝﾅ!ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂﾝﾅ",
        "ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂンナナナﾝﾝﾝﾅ!ナナナﾝﾂンナナナﾝﾝﾝﾅﾂンナﾝﾝﾝﾅ!ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂンンンﾝﾝﾝﾅ!ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂンンンナﾝﾅ!ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂンナナﾝﾝﾝﾅ",
      ]
    `
    );
  });

  it("annann", () => {
    expect(
      [
        "ンンンナﾝﾅﾅ!ンンナﾝﾅﾅ",
        "ンンンナナﾝﾂンンﾅﾂンンンナナナﾝﾅ!ンンナナﾝﾂンンナナﾝﾅﾂンンﾅ",
        "ンンンナﾝﾅﾅ!ンンナナﾝﾅﾅ!ンンンﾝﾅﾅ!ンンンﾝﾅﾅ!ﾝﾅﾅ!ンンンナナナﾝﾅﾅﾅ!ナナﾅﾅ!ﾝﾅﾅ!ンナナナﾅﾅ!ンンンﾝﾅﾅ!ンンンナナﾝﾅﾅ",
        "ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂナナナﾝﾝﾅ!ナナナﾝﾂンナナナﾝﾝﾝﾅﾂナナナﾝﾝﾅ!ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂナﾝﾅ!ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂンンナナナﾝﾅ!ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂﾝﾅ",
        "ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂンナナナﾝﾝﾝﾅ!ナナナﾝﾂンナナナﾝﾝﾝﾅﾂンナﾝﾝﾝﾅ!ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂンンンﾝﾝﾝﾅ!ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂンンンナﾝﾅ!ナナナﾝﾂンンナナナﾝﾝﾝﾅﾂンナナﾝﾝﾝﾅ",
      ].map(annann)
    ).toMatchInlineSnapshot(`
      [
        "hi",
        "你好",
        "hello world",
        "こんにちは",
        "ありがとう",
      ]
    `);
  });
});
